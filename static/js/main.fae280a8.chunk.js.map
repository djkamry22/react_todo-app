{"version":3,"sources":["Footer.js","TodoList.js","App.js","index.js"],"names":["Footer","_ref","tasks","filterBy","currentFilter","clearCompletedAll","react_default","a","createElement","className","filter","item","completed","length","href","onClick","TodoList","changeStatus","destroyTask","map","task","type","id","concat","checked","onChange","htmlFor","title","App","state","currentIndex","writeTasks","event","_this","preventDefault","setState","Object","toConsumableArray","taskId","currentTask","find","completedAll","objectSpread","every","didAllTask","filterTodos","howToFilter","_this2","this","onSubmit","placeholder","value","target","src_TodoList","src_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fae280a8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Footer({\n  tasks, filterBy, currentFilter, clearCompletedAll,\n}) {\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {tasks.filter(item => !item.completed).length}\n        {' '}\nactive items\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={currentFilter === 'All' && 'selected'}\n            onClick={() => filterBy('All')}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            className={currentFilter === 'Active' && 'selected'}\n            href=\"#/active\"\n            onClick={() => filterBy('Active')}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            className={currentFilter === 'Completed' && 'selected'}\n            onClick={() => filterBy('Completed')}\n            href=\"#/completed\"\n          >\n            Completed\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={clearCompletedAll}\n            href=\"#/clear-completed\"\n          >\n            Clear all completed\n          </a>\n        </li>\n      </ul>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  tasks: PropTypes.objectOf.isRequired,\n  filterBy: PropTypes.func.isRequired,\n  currentFilter: PropTypes.func.isRequired,\n  clearCompletedAll: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst TodoList = ({ tasks, changeStatus, destroyTask }) => (\n  tasks.map(task => (\n    <li className={task.completed && 'completed'}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={`todo-${task.id}`}\n          checked={task.completed}\n          onChange={() => changeStatus(task.id)}\n        />\n        {/* eslint-disable-next-line */}\n        <label htmlFor={`todo-${task.id}`}>\n          {task.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => destroyTask(task.id)}\n        />\n      </div>\n    </li>\n  ))\n);\n\nexport default TodoList;\n","import React from 'react';\nimport Footer from './Footer';\nimport TodoList from './TodoList';\n\nclass App extends React.Component {\n  state = {\n    tasks: [],\n    currentFilter: 'All',\n    title: '',\n    currentIndex: 0,\n  }\n\n  writeTasks = (event) => {\n    if (!this.state.title) {\n      return;\n    }\n\n    event.preventDefault();\n    this.setState(state => ({\n      tasks: [...state.tasks, {\n        title: state.title,\n        completed: false,\n        id: state.currentIndex,\n      }],\n      title: '',\n      currentIndex: state.currentIndex + 1,\n    }));\n  }\n\n  changeStatus = (taskId) => {\n    const currentTask = this.state.tasks.find(task => task.id === taskId);\n\n    currentTask.completed = !currentTask.completed;\n    this.setState(state => ({\n      tasks: [...state.tasks],\n    }));\n  }\n\n  destroyTask = (taskId) => {\n    this.setState(state => ({\n      tasks: state.tasks.filter(task => task.id !== taskId),\n    }));\n  }\n\n  completedAll = () => {\n    this.setState(state => ({\n      tasks: state.tasks.map(task => ({\n        ...task,\n        completed: !state.tasks.every(didAllTask => didAllTask.completed),\n      })),\n    }));\n  }\n\n  filterTodos = (filter) => {\n    if (filter === 'All') {\n      return this.state.tasks;\n    }\n\n    if (filter === 'Active') {\n      return this.state.tasks.filter(task => !task.completed);\n    }\n\n    return this.state.tasks.filter(task => task.completed);\n  }\n\n  filterBy = (howToFilter) => {\n    this.setState({\n      currentFilter: howToFilter,\n    });\n  }\n\n  clearCompletedAll = () => {\n    this.setState(state => ({\n      ...state,\n      tasks: state.tasks.filter(task => !task.completed),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.writeTasks}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={this.state.title}\n              onChange={(event) => {\n                this.setState({\n                  title: event.target.value,\n                });\n              }}\n            />\n          </form>\n\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.completedAll}\n          />\n          {/*  eslint-disable-next-line */ }\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            <TodoList\n              tasks={this.filterTodos(this.state.currentFilter)}\n              changeStatus={this.changeStatus}\n              destroyTask={this.destroyTask}\n            />\n          </ul>\n        </section>\n        <Footer\n          tasks={this.state.tasks}\n          filterBy={this.filterBy}\n          currentFilter={this.state.currentFilter}\n          clearCompletedAll={this.clearCompletedAll}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}